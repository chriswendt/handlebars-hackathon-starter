{
  "data": {
    "address": {
      "nick": "addr1",
      "addr": "1 Main Street",
      "city": "College Station",
      "state": "TX",
      "zip": "77840",
      "phone": "555-555-5555"
    },
    "user1": {
      "email": [
        "gen_email"
      ],
      "password": "password",
      "first_name": "Test",
      "last_name": "User"
    },
    "cc": {
      "nick": "cc1",
      "number": "4111111111111111",
      "cvc": "000",
      "expiry": "01/2137",
      "addr": "1 Main Street",
      "city": "College Station",
      "state": "TX",
      "zip": "77840",
      "phone": "555-555-5555"
    }
  },
  "tests": [
    {
      "name": "delivery_list_success",
      "function": "delivery_list",
      "group": "restaurant",
      "input": {
        "datetime": "ASAP",
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "zip": [
          "data.address.zip"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "array",
          "description": "An array of objects (one for each restaurant)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Ordr.in's restaurant id number"
              },
              "is_delivering": {
                "type": "integer",
                "description": "If this restaurant is delivering this is set to 1, otherwise it's 0."
              },
              "rds_info": {
                "type": "object",
                "description": "Information about our restaurant delivery partner",
                "properties": {
                  "logo": {
                    "type": "string",
                    "description": "A url that links to this rds's logo image.",
                    "format": "url"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of this rds."
                  },
                  "id": {
                    "type": "integer",
                    "description": "Ordr.in's id for this rds."
                  }
                }
              },
              "del": {
                "type": "number",
                "description": "The expected delivery time in minutes"
              },
              "na": {
                "type": "string",
                "description": "The restaurant's name"
              },
              "cs_phone": {
                "type": "string",
                "description": "The restaurant's formatted phone number",
                "format": "phone"
              },
              "mino": {
                "type": "number",
                "description": "The restaurant's delivery minimum"
              },
              "ad": {
                "type": "string",
                "description": "The full address of this restaurant"
              },
              "city": {
                "type": "string",
                "description": "The city this restaurant is located in"
              },
              "cu": {
                "type": "array",
                "description": "An array of cuisine types offered by this restaurant",
                "items": {
                  "type": "string",
                  "description": "A single cuisine type"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "delivery_list_bad_address",
      "function": "delivery_list",
      "group": "restaurant",
      "input": {
        "datetime": "ASAP",
        "addr": "test",
        "city": "test",
        "zip": "00000"
      },
      "output": {
        "success": false,
        "schema": {
          "type": "object",
          "properties": {
            "err_code": {
              "type": "integer",
              "enum": [
                400
              ]
            },
            "_msg": {
              "type": "string",
              "pattern": "address"
            }
          }
        }
      }
    },
    {
      "name": "delivery_list_empty",
      "function": "delivery_list",
      "group": "restaurant",
      "input": {
        "datetime": "ASAP",
        "addr": "900 Broadway",
        "city": "New York",
        "zip": "10003"
      },
      "output": {
        "success": true,
        "schema": {
          "type": [
            "array",
            "object"
          ],
          "maxLength": 0,
          "maxProperties": 0
        }
      }
    },
    {
      "name": "delivery_check_success",
      "function": "delivery_check",
      "group": "restaurant",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ],
        "datetime": "ASAP",
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "zip": [
          "data.address.zip"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object",
          "properties": {
            "rid": {
              "type": "string",
              "description": "Ordr.in's unique restaurant identifier for the restaurant.",
              "formatDescription": "A number",
              "pattern": "^[0-9]+$",
              "default_value": "10517"
            },
            "allow_tip": {
              "type": "integer",
              "description": "If this restaurant allows tip, then 1, otherwise 0"
            },
            "allow_asap": {
              "type": "integer",
              "description": "If this restaurant allows ASAP orders, then 1, otherwise 1"
            },
            "meals": {
              "type": "array",
              "decription": "An array of meal numbers that are being delivered at the requested time.",
              "items": {
                "type": "integer",
                "description": "A meal number"
              }
            },
            "zone_id": {
              "type": "integer"
            },
            "provided_id": {
              "type": "string"
            },
            "provided_id2": {
              "type": "string"
            },
            "can_service": {
              "type": "integer"
            },
            "service": {
              "type": "string"
            },
            "delivery": {
              "type": "integer",
              "description": "If this restaurant is delivering this is set to 1, otherwise it's 0."
            },
            "del": {
              "type": "number",
              "description": "The expected delivery time in minutes."
            },
            "mino": {
              "type": "string",
              "description": "The minimum order amount"
            },
            "msg": {
              "type": "string",
              "description": "If the restaurant is not delivering this tells why."
            }
          }
        }
      },
      "dependencies": [
        "delivery_list_success"
      ]
    },
    {
      "name": "delivery_check_bad_rid",
      "function": "delivery_check",
      "group": "restaurant",
      "input": {
        "rid": "0",
        "datetime": "ASAP",
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "zip": [
          "data.address.zip"
        ]
      },
      "output": {
        "success": false,
        "schema": {
          "type": "object",
          "properties": {
            "err_code": {
              "type": "integer",
              "enum": [
                404
              ]
            }
          }
        }
      }
    },
    {
      "name": "fee_success",
      "function": "fee",
      "group": "restaurant",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ],
        "subtotal": "15.00",
        "tip": "5.00",
        "datetime": "ASAP",
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "zip": [
          "data.address.zip"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "properties": {
            "fee": {
              "type": "string",
              "description": "The delivery fee with this order"
            },
            "tax": {
              "type": "string",
              "description": "The tax on this order"
            },
            "rid": {
              "type": "string",
              "description": "Ordr.in's unique restaurant identifier for the restaurant.",
              "formatDescription": "A number",
              "pattern": "^[0-9]+$",
              "default_value": "10517"
            },
            "allow_tip": {
              "type": "integer",
              "description": "If this restaurant allows tip, then 1, otherwise 0"
            },
            "allow_asap": {
              "type": "integer",
              "description": "If this restaurant allows ASAP orders, then 1, otherwise 1"
            },
            "meals": {
              "type": "array",
              "decription": "An array of meal numbers that are being delivered at the requested time.",
              "items": {
                "type": "integer",
                "description": "A meal number"
              }
            },
            "zone_id": {
              "type": "integer"
            },
            "provided_id": {
              "type": "string"
            },
            "provided_id2": {
              "type": "string"
            },
            "can_service": {
              "type": "integer"
            },
            "service": {
              "type": "string"
            },
            "delivery": {
              "type": "integer",
              "description": "If this restaurant is delivering this is set to 1, otherwise it's 0."
            },
            "del": {
              "type": "number",
              "description": "The expected delivery time in minutes."
            },
            "mino": {
              "type": "string",
              "description": "The minimum order amount"
            },
            "msg": {
              "type": "string",
              "description": "If the restaurant is not delivering this tells why."
            }
          },
          "type": "object",
          "description": "An object"
        }
      },
      "dependencies": [
        "delivery_list_success"
      ]
    },
    {
      "name": "restaurant_details_success",
      "function": "restaurant_details",
      "group": "restaurant",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "properties": {
            "menu": {
              "type": "array"
            }
          }
        }
      },
      "dependencies": [
        "delivery_list_success"
      ]
    },
    {
      "name": "restaurant_details_fail",
      "function": "restaurant_details",
      "group": "restaurant",
      "input": {
        "rid": "0"
      },
      "output": {
        "success": false,
        "schema": {
          "type": "object",
          "properties": {
            "err_code": {
              "type": "integer",
              "enum": [
                404
              ]
            }
          }
        }
      }
    },
    {
      "name": "create_user_success",
      "function": "create_account",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "pw": [
          "data.user1.password"
        ],
        "first_name": [
          "data.user1.first_name"
        ],
        "last_name": [
          "data.user1.last_name"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        }
      }
    },
    {
      "name": "account_info_success",
      "function": "get_account_info",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object",
          "properties": {
            "em": {
              "type": "string",
              "description": "The user's email"
            },
            "pw": {
              "type": "string",
              "description": "The user's SHA encoded password. API Explorer forms will automatically encode it for you."
            },
            "first_name": {
              "type": "string",
              "description": "The user's first name"
            },
            "last_name": {
              "type": "string",
              "description": "The user's last name"
            }
          }
        }
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "account_info_auth_fail",
      "function": "get_account_info",
      "group": "user",
      "input": {
        "email": "not_a_real_user@example.com",
        "current_password": "not_the_password"
      },
      "output": {
        "success": false,
        "schema": {}
      }
    },
    {
      "name": "create_addr_success",
      "function": "create_addr",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.address.nick"
        ],
        "phone": [
          "data.address.phone"
        ],
        "zip": [
          "data.address.zip"
        ],
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "state": [
          "data.address.state"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        }
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "get_addr_success",
      "function": "get_saved_addr",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.address.nick"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "properties": {
            "nick": {
              "type": "string",
              "description": "The nickname of this address"
            },
            "phone": {
              "type": "string",
              "description": "The customer's phone number",
              "format": "phone",
              "mutator": "phone",
              "default_value": "555-555-5555"
            },
            "zip": {
              "type": "string",
              "description": "The zip code part of the address",
              "formatDescription": "5 digits",
              "pattern": "^[0-9]{5}$",
              "default_value": "10003"
            },
            "addr": {
              "type": "string",
              "description": "The street address",
              "default_value": "900 Broadway"
            },
            "addr2": {
              "type": "string",
              "description": "The second part of the street address, if needed"
            },
            "city": {
              "type": "string",
              "description": "The city part of the address",
              "default_value": "New York"
            },
            "state": {
              "type": "string",
              "description": "The state part of the address",
              "formatDescription": "Two letters",
              "pattern": "^[A-Za-z]{2}$",
              "mutator": "state",
              "default_value": "NY"
            }
          },
          "title": "Address",
          "split_id": "addr",
          "required": [
            "phone",
            "zip",
            "addr",
            "city",
            "state"
          ]
        }
      },
      "dependencies": [
        "create_addr_success"
      ]
    },
    {
      "name": "get_all_addrs_success",
      "function": "get_all_saved_addrs",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": [
            "array",
            "object"
          ],
          "description": "An array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "title": "Address",
                "split_id": "addr",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "type": "string",
                            "description": "The street address",
                            "default_value": "900 Broadway"
                          },
                          "addr2": {
                            "type": "string",
                            "description": "The second part of the street address, if needed"
                          },
                          "city": {
                            "type": "string",
                            "description": "The city part of the address",
                            "default_value": "New York"
                          },
                          "state": {
                            "type": "string",
                            "description": "The state part of the address",
                            "formatDescription": "Two letters",
                            "pattern": "^[A-Za-z]{2}$",
                            "mutator": "state",
                            "default_value": "NY"
                          }
                        },
                        "required": [
                          "addr",
                          "city",
                          "state"
                        ]
                      }
                    ],
                    "properties": {
                      "zip": {
                        "type": "string",
                        "description": "The zip code part of the address",
                        "formatDescription": "5 digits",
                        "pattern": "^[0-9]{5}$",
                        "default_value": "10003"
                      }
                    },
                    "required": [
                      "zip"
                    ]
                  }
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "The customer's phone number",
                    "format": "phone",
                    "mutator": "phone",
                    "default_value": "555-555-5555"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            ],
            "properties": {
              "nick": {
                "type": "string",
                "description": "The nickname of this address"
              }
            }
          },
          "additionalProperties": {
            "type": "object",
            "allOf": [
              {
                "title": "Address",
                "split_id": "addr",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "type": "string",
                            "description": "The street address",
                            "default_value": "900 Broadway"
                          },
                          "addr2": {
                            "type": "string",
                            "description": "The second part of the street address, if needed"
                          },
                          "city": {
                            "type": "string",
                            "description": "The city part of the address",
                            "default_value": "New York"
                          },
                          "state": {
                            "type": "string",
                            "description": "The state part of the address",
                            "formatDescription": "Two letters",
                            "pattern": "^[A-Za-z]{2}$",
                            "mutator": "state",
                            "default_value": "NY"
                          }
                        },
                        "required": [
                          "addr",
                          "city",
                          "state"
                        ]
                      }
                    ],
                    "properties": {
                      "zip": {
                        "type": "string",
                        "description": "The zip code part of the address",
                        "formatDescription": "5 digits",
                        "pattern": "^[0-9]{5}$",
                        "default_value": "10003"
                      }
                    },
                    "required": [
                      "zip"
                    ]
                  }
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "The customer's phone number",
                    "format": "phone",
                    "mutator": "phone",
                    "default_value": "555-555-5555"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            ],
            "properties": {
              "nick": {
                "type": "string",
                "description": "The nickname of this address"
              }
            }
          }
        }
      },
      "dependencies": [
        "create_addr_success"
      ]
    },
    {
      "name": "delete_addr_success",
      "function": "delete_addr",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.address.nick"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        }
      },
      "dependencies": [
        "create_addr_success"
      ],
      "soft_dependencies": [
        "get_addr_success",
        "get_all_addrs_success",
        "user_order_success"
      ]
    },
    {
      "name": "get_addr_fail",
      "function": "get_saved_addr",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": "not_a_real_address"
      },
      "output": {
        "success": false,
        "schema": {
          "type": "object"
        }
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "create_cc_success",
      "function": "create_cc",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.cc.nick"
        ],
        "card_number": [
          "data.cc.number"
        ],
        "card_cvc": [
          "data.cc.cvc"
        ],
        "card_expiry": [
          "data.cc.expiry"
        ],
        "bill_addr": [
          "data.cc.addr"
        ],
        "bill_city": [
          "data.cc.city"
        ],
        "bill_state": [
          "data.cc.state"
        ],
        "bill_zip": [
          "data.cc.zip"
        ],
        "bill_phone": [
          "data.cc.phone"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        },
        "regex": "\\{.*?\\}"
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "get_cc_success",
      "function": "get_saved_cc",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.cc.nick"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "properties": {
            "nick": {
              "type": "string",
              "description": "The name on the card"
            },
            "cc_last5": {
              "type": "string",
              "description": "The last 5 digits of the card"
            },
            "expiry_month": {
              "type": "string",
              "description": "The 2 digit expiration month"
            },
            "expiry_year": {
              "type": "string",
              "description": "The 4 digit expiration year"
            },
            "type": {
              "type": "string",
              "description": "The type of card (e.g. American Express)"
            },
            "bill_addr": {
              "type": "string",
              "description": "The credit card's billing street address"
            },
            "bill_addr2": {
              "type": "string",
              "description": "The second part of the credit card's biling street address."
            },
            "bill_city": {
              "type": "string",
              "description": "The credit card's billing city"
            },
            "bill_state": {
              "type": "string",
              "description": "The credit card's billing state"
            },
            "bill_zip": {
              "type": "string",
              "description": "The credit card's billing zip code"
            },
            "bill_phone": {
              "type": "string",
              "description": "The credit card's billing phone number"
            }
          }
        }
      },
      "dependencies": [
        "create_cc_success"
      ]
    },
    {
      "name": "get_all_ccs_success",
      "function": "get_all_saved_ccs",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": [
            "array",
            "object"
          ],
          "items": {
            "type": "object",
            "properties": {
              "nick": {
                "type": "string",
                "description": "The name on the card"
              },
              "cc_last5": {
                "type": "string",
                "description": "The last 5 digits of the card"
              },
              "expiry_month": {
                "type": "string",
                "description": "The 2 digit expiration month"
              },
              "expiry_year": {
                "type": "string",
                "description": "The 4 digit expiration year"
              },
              "type": {
                "type": "string",
                "description": "The type of card (e.g. American Express)"
              },
              "bill_addr": {
                "type": "string",
                "description": "The credit card's billing street address"
              },
              "bill_addr2": {
                "type": "string",
                "description": "The second part of the credit card's biling street address."
              },
              "bill_city": {
                "type": "string",
                "description": "The credit card's billing city"
              },
              "bill_state": {
                "type": "string",
                "description": "The credit card's billing state"
              },
              "bill_zip": {
                "type": "string",
                "description": "The credit card's billing zip code"
              },
              "bill_phone": {
                "type": "string",
                "description": "The credit card's billing phone number"
              }
            }
          },
          "additionalProperties": {
            "type": "object",
            "properties": {
              "nick": {
                "type": "string",
                "description": "The name on the card"
              },
              "cc_last5": {
                "type": "string",
                "description": "The last 5 digits of the card"
              },
              "expiry_month": {
                "type": "string",
                "description": "The 2 digit expiration month"
              },
              "expiry_year": {
                "type": "string",
                "description": "The 4 digit expiration year"
              },
              "type": {
                "type": "string",
                "description": "The type of card (e.g. American Express)"
              },
              "bill_addr": {
                "type": "string",
                "description": "The credit card's billing street address"
              },
              "bill_addr2": {
                "type": "string",
                "description": "The second part of the credit card's biling street address."
              },
              "bill_city": {
                "type": "string",
                "description": "The credit card's billing city"
              },
              "bill_state": {
                "type": "string",
                "description": "The credit card's billing state"
              },
              "bill_zip": {
                "type": "string",
                "description": "The credit card's billing zip code"
              },
              "bill_phone": {
                "type": "string",
                "description": "The credit card's billing phone number"
              }
            }
          }
        }
      },
      "dependencies": [
        "create_cc_success"
      ]
    },
    {
      "name": "delete_cc_success",
      "function": "delete_cc",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.cc.nick"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        }
      },
      "dependencies": [
        "create_cc_success"
      ],
      "soft_dependencies": [
        "get_cc_success",
        "get_all_ccs_success",
        "user_order_success"
      ]
    },
    {
      "name": "get_cc_fail",
      "function": "get_saved_cc",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": "not_a_real_credit_card"
      },
      "output": {
        "success": false,
        "schema": {}
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "get_order_success",
      "function": "get_order",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "oid": [
          "output.user_order_tomorrow_success.refnum"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "properties": {
            "oid": {
              "type": "string",
              "description": "Ordr.in's unique ID for this order"
            },
            "rid": {
              "type": "string",
              "description": "Ordr.in's unique ID for the restaurant that handled this order"
            },
            "rname": {
              "type": "string",
              "description": "The name of the restaurant that handled this order"
            },
            "subtotal": {
              "type": "string",
              "description": "The formatted subtotal for this order"
            },
            "tip": {
              "type": "string",
              "description": "The formatted tip amount of this order"
            },
            "tax": {
              "type": "string",
              "description": "The formatted tax amount of this order"
            },
            "fee": {
              "type": "string",
              "description": "The formatted fee of this order"
            },
            "total": {
              "type": "string",
              "description": "The formatted total price of this order"
            },
            "ctime": {
              "type": "integer",
              "description": "The time of this order in seconds since the Unix Epoch."
            },
            "tray": {
              "type": "array",
              "description": "The tray of items ordered in this order",
              "items": {
                "type": "object",
                "description": "A single item in this order",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of this menu item"
                  },
                  "id": {
                    "type": "integer",
                    "description": "Ordr.in's unique ID number for this menu item"
                  },
                  "price": {
                    "type": "string",
                    "description": "The formatted price of this item"
                  },
                  "qty": {
                    "type": [
                      "integer",
                      "string"
                    ],
                    "description": "The number of items ordered"
                  },
                  "opts": {
                    "type": "array",
                    "description": "The options selected for this object",
                    "items": {
                      "type": "object",
                      "description": "A single option selected for this object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this option"
                        },
                        "id": {
                          "type": "string",
                          "description": "Ordr.in's unique ID number for this option"
                        },
                        "price": {
                          "type": "string",
                          "description": "The formatted price of this option"
                        },
                        "qty": {
                          "type": "integer",
                          "description": "The number of times this option was ordered"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "dependencies": [
        "user_order_tomorrow_success"
      ]
    },
    {
      "name": "get_empty_order_history_success",
      "function": "get_order_history",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "array",
          "maxLength": 0
        }
      },
      "dependencies": [
        "create_user_success"
      ]
    },
    {
      "name": "get_order_history_success",
      "function": "get_order_history",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ]
      },
      "output": {
        "success": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "oid": {
                "type": "string",
                "description": "Ordr.in's unique ID for this order"
              },
              "rid": {
                "type": "string",
                "description": "Ordr.in's unique ID for the restaurant that handled this order"
              },
              "rname": {
                "type": "string",
                "description": "The name of the restaurant that handled this order"
              },
              "subtotal": {
                "type": "string",
                "description": "The formatted subtotal for this order"
              },
              "tip": {
                "type": "string",
                "description": "The formatted tip amount of this order"
              },
              "tax": {
                "type": "string",
                "description": "The formatted tax amount of this order"
              },
              "fee": {
                "type": "string",
                "description": "The formatted fee of this order"
              },
              "total": {
                "type": "string",
                "description": "The formatted total price of this order"
              },
              "ctime": {
                "type": "integer",
                "description": "The time of this order in seconds since the Unix Epoch."
              },
              "tray": {
                "type": "array",
                "description": "The tray of items ordered in this order",
                "items": {
                  "type": "object",
                  "description": "A single item in this order",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this menu item"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Ordr.in's unique ID number for this menu item"
                    },
                    "price": {
                      "type": "string",
                      "description": "The formatted price of this item"
                    },
                    "qty": {
                      "type": [
                        "integer",
                        "string"
                      ],
                      "description": "The number of items ordered"
                    },
                    "opts": {
                      "type": "array",
                      "description": "The options selected for this object",
                      "items": {
                        "type": "object",
                        "description": "A single option selected for this object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of this option"
                          },
                          "id": {
                            "type": "string",
                            "description": "Ordr.in's unique ID number for this option"
                          },
                          "price": {
                            "type": "string",
                            "description": "The formatted price of this option"
                          },
                          "qty": {
                            "type": "integer",
                            "description": "The number of times this option was ordered"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "dependencies": [
        "user_order_success",
        "user_order_tomorrow_success"
      ]
    },
    {
      "name": "change_password_success",
      "function": "change_password",
      "group": "user",
      "input": {
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "password": "new_password"
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "description": "An object with an error code and possible message",
          "properties": {
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          }
        }
      },
      "dependencies": [
        "create_user_success"
      ],
      "soft_dependencies": [
        "account_info_success",
        "create_addr_success",
        "get_addr_success",
        "get_all_addrs_success",
        "delete_addr_success",
        "get_addr_fail",
        "create_cc_success",
        "get_cc_success",
        "get_all_ccs_success",
        "delete_cc_success",
        "get_cc_fail",
        "get_order_success",
        "get_order_history_success",
        "user_order_success"
      ]
    },
    {
      "name": "user_order_success",
      "function": "order_user",
      "group": "order",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ],
        "tray": [
          "funcs.gen_tray",
          [
            "output.restaurant_details_success.menu"
          ]
        ],
        "tip": "10.00",
        "first_name": [
          "data.user1.first_name"
        ],
        "last_name": [
          "data.user1.last_name"
        ],
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.address.nick"
        ],
        "card_nick": [
          "data.cc.nick"
        ],
        "delivery_date": "ASAP"
      },
      "output": {
        "success": null,
        "schema": {
          "type": "object",
          "properties": {
            "refnum": {
              "type": "string",
              "description": "Ordr.in's unique reference String for this order. Only exists if the order was successful."
            },
            "cs_order_id": {
              "type": "string",
              "description": "(Optional) Our delivery partener's reference number for this order."
            },
            "text": {
              "type": "string",
              "description": "This is an end user visible error or success message message."
            },
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          },
          "description": "An object with an error code and possible message"
        }
      },
      "dependencies": [
        "delivery_list_success",
        "restaurant_details_success",
        "create_user_success",
        "create_addr_success",
        "create_cc_success"
      ],
      "soft_dependencies": [
        "get_empty_order_history_success"
      ]
    },
    {
      "name": "user_order_tomorrow_success",
      "function": "order_user",
      "group": "order",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ],
        "tray": [
          "funcs.gen_tray",
          [
            "output.restaurant_details_success.menu"
          ]
        ],
        "tip": "10.01",
        "first_name": [
          "data.user1.first_name"
        ],
        "last_name": [
          "data.user1.last_name"
        ],
        "email": [
          "data.user1.email"
        ],
        "current_password": [
          "data.user1.password"
        ],
        "nick": [
          "data.address.nick"
        ],
        "card_nick": [
          "data.cc.nick"
        ],
        "delivery_date": [
          "funcs.tomorrow"
        ],
        "delivery_time": "12:00"
      },
      "output": {
        "success": true,
        "schema": {
          "type": "object",
          "properties": {
            "refnum": {
              "type": "string",
              "description": "Ordr.in's unique reference String for this order. Only exists if the order was successful."
            },
            "cs_order_id": {
              "type": "string",
              "description": "(Optional) Our delivery partener's reference number for this order."
            },
            "text": {
              "type": "string",
              "description": "This is an end user visible error or success message message."
            },
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          },
          "description": "An object with an error code and possible message"
        }
      },
      "dependencies": [
        "delivery_list_success",
        "restaurant_details_success",
        "create_user_success",
        "create_addr_success",
        "create_cc_success"
      ],
      "soft_dependencies": [
        "get_empty_order_history_success"
      ]
    },
    {
      "name": "guest_order_success",
      "function": "order_guest",
      "group": "order",
      "input": {
        "rid": [
          "output.delivery_list_success.0.id"
        ],
        "tray": [
          "funcs.gen_tray",
          [
            "output.restaurant_details_success.menu"
          ]
        ],
        "tip": "10.00",
        "first_name": [
          "data.user1.first_name"
        ],
        "last_name": [
          "data.user1.last_name"
        ],
        "em": "example@example.com",
        "phone": [
          "data.address.phone"
        ],
        "zip": [
          "data.address.zip"
        ],
        "addr": [
          "data.address.addr"
        ],
        "city": [
          "data.address.city"
        ],
        "state": [
          "data.address.state"
        ],
        "card_name": "Test User",
        "card_number": [
          "data.cc.number"
        ],
        "card_cvc": [
          "data.cc.cvc"
        ],
        "card_expiry": [
          "data.cc.expiry"
        ],
        "card_bill_addr": [
          "data.cc.addr"
        ],
        "card_bill_city": [
          "data.cc.city"
        ],
        "card_bill_state": [
          "data.cc.state"
        ],
        "card_bill_zip": [
          "data.cc.zip"
        ],
        "card_bill_phone": [
          "data.cc.phone"
        ],
        "delivery_date": "ASAP"
      },
      "output": {
        "success": null,
        "schema": {
          "type": "object",
          "properties": {
            "refnum": {
              "type": "string",
              "description": "Ordr.in's unique reference String for this order. Only exists if the order was successful."
            },
            "cs_order_id": {
              "type": "string",
              "description": "(Optional) Our delivery partener's reference number for this order."
            },
            "text": {
              "type": "string",
              "description": "This is an end user visible error or success message message."
            },
            "_error": {
              "type": "integer",
              "description": "If there was an error, this is set to 1, otherwise it's 0"
            },
            "msg": {
              "type": "string",
              "description": "Error details"
            }
          },
          "description": "An object with an error code and possible message"
        }
      },
      "dependencies": [
        "delivery_list_success",
        "restaurant_details_success"
      ]
    }
  ]
}